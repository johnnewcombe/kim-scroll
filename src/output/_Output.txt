------+-----------------------------------+-------------+----+---------+------+-----------------------+-------------------------------------------------------------------
 Line | # File                       Line | Line Type   | MX |  Reloc  | Size | Address   Object Code |  Source Code                                                      
------+-----------------------------------+-------------+----+---------+------+-----------------------+-------------------------------------------------------------------
    1 |  1              scroll.asm      1 | Comment     | 11 |         |    0 | 00/0200               | ;=============================================================================
    2 |  1              scroll.asm      2 | Comment     | 11 |         |    0 | 00/0200               | ; Display Example (c) J.L.Newcombe 2024 (mostly)
    3 |  1              scroll.asm      3 | Comment     | 11 |         |    0 | 00/0200               | ;
    4 |  1              scroll.asm      4 | Comment     | 11 |         |    0 | 00/0200               | ; Based on examples by Aart Bik
    5 |  1              scroll.asm      5 | Comment     | 11 |         |    0 | 00/0200               | ;      https://github.com/maksimKorzh/KIM-1/blob/main/software/Hello/hello.asm
    6 |  1              scroll.asm      6 | Comment     | 11 |         |    0 | 00/0200               | ;
    7 |  1              scroll.asm      7 | Comment     | 11 |         |    0 | 00/0200               | ; Licence:
    8 |  1              scroll.asm      8 | Comment     | 11 |         |    0 | 00/0200               | ;       None
    9 |  1              scroll.asm      9 | Comment     | 11 |         |    0 | 00/0200               | ;
   10 |  1              scroll.asm     10 | Comment     | 11 |         |    0 | 00/0200               | ; Assembler:
   11 |  1              scroll.asm     11 | Comment     | 11 |         |    0 | 00/0200               | ;       Merlin32 compiler by Brutal Delux
   12 |  1              scroll.asm     12 | Comment     | 11 |         |    0 | 00/0200               | ;       https://www.brutaldeluxe.fr/products/crossdevtools/merlin/index.html
   13 |  1              scroll.asm     13 | Comment     | 11 |         |    0 | 00/0200               | ;       Load to $0200
   14 |  1              scroll.asm     14 | Comment     | 11 |         |    0 | 00/0200               | ;
   15 |  1              scroll.asm     15 | Comment     | 11 |         |    0 | 00/0200               | ;-----------------------------------------------------------------------------
   16 |  1              scroll.asm     16 | Comment     | 11 |         |    0 | 00/0200               | ; Date          Comment
   17 |  1              scroll.asm     17 | Comment     | 11 |         |    0 | 00/0200               | ;-----------------------------------------------------------------------------
   18 |  1              scroll.asm     18 | Comment     | 11 |         |    0 | 00/0200               | ; 10.08.2024    Created for the Merlin32 compiler by Brutal Delux
   19 |  1              scroll.asm     19 | Comment     | 11 |         |    0 | 00/0200               | ;
   20 |  1              scroll.asm     20 | Comment     | 11 |         |    0 | 00/0200               | ;
   21 |  1              scroll.asm     21 | Comment     | 11 |         |    0 | 00/0200               | ;=============================================================================
   22 |  1              scroll.asm     22 | Empty       | 11 |         |    0 | 00/0200               |                                  
   23 |  1              scroll.asm     23 | Directive   | 11 |         |    0 | 00/0200               |             PUT   include/kim-symbols.asm
   24 |  2 include/kim-symbols.asm      1 | Empty       | 11 |         |    0 | 00/0200               |                                  
   25 |  2 include/kim-symbols.asm      2 | Comment     | 11 |         |    0 | 00/0200               | ;        ROM ROUTINES
   26 |  2 include/kim-symbols.asm      3 | Empty       | 11 |         |    0 | 00/0200               |                                  
   27 |  2 include/kim-symbols.asm      4 | Equivalence | 11 |         |    0 | 00/0200               | AK          EQU   $1EFE          ; Check for key depressed. A non-zero: no key down. A equal 0, key down.
   28 |  2 include/kim-symbols.asm      5 | Equivalence | 11 |         |    0 | 00/0200               | SCAND       EQU   $1F19          ; Display address and contents.
   29 |  2 include/kim-symbols.asm      6 | Equivalence | 11 |         |    0 | 00/0200               | SCANDS      EQU   $1F1F          ; Output six hex characters on display. Stored in $00F9, $00FA, $00FB.
   30 |  2 include/kim-symbols.asm      7 | Equivalence | 11 |         |    0 | 00/0200               | CONVD       EQU   $1F48          ; Output HEX digit
   31 |  2 include/kim-symbols.asm      8 | Equivalence | 11 |         |    0 | 00/0200               | OUTPUT      EQU   $1F4E          ; Output 7 segment code stored in A register (to lit up a custom segment)
   32 |  2 include/kim-symbols.asm      9 | Equivalence | 11 |         |    0 | 00/0200               | KEYIN       EQU   $1F40          ; Open up keyboard channel. Call before using GETKEY (or call SCANDS).
   33 |  2 include/kim-symbols.asm     10 | Equivalence | 11 |         |    0 | 00/0200               | INCPT       EQU   $1F63          ; Increment display address.
   34 |  2 include/kim-symbols.asm     11 | Equivalence | 11 |         |    0 | 00/0200               | GETKEY      EQU   $1F6A          ; Return key from keyboard. Value 0-F, 10(AD), 11(DA), 12(+), 13(GO), 14(PC), 15 (no keypress).
   35 |  2 include/kim-symbols.asm     12 | Equivalence | 11 |         |    0 | 00/0200               | TABLE       EQU   $1FE7          ; Table of 7-segment patterns.
   36 |  2 include/kim-symbols.asm     13 | Equivalence | 11 |         |    0 | 00/0200               | SAVE        EQU   $1C00          ; Normal interrupt entry point.
   37 |  2 include/kim-symbols.asm     14 | Equivalence | 11 |         |    0 | 00/0200               | RST         EQU   $1C22          ; Reset return to monitor.
   38 |  2 include/kim-symbols.asm     15 | Equivalence | 11 |         |    0 | 00/0200               | START       EQU   $1C4F          ; Return to monitor entry
   39 |  2 include/kim-symbols.asm     16 | Empty       | 11 |         |    0 | 00/0200               |                                  
   40 |  2 include/kim-symbols.asm     17 | Comment     | 11 |         |    0 | 00/0200               | ; IO
   41 |  2 include/kim-symbols.asm     18 | Empty       | 11 |         |    0 | 00/0200               |                                  
   42 |  2 include/kim-symbols.asm     19 | Equivalence | 11 |         |    0 | 00/0200               | SAD         EQU   $1740          ; 6530 A DATA
   43 |  2 include/kim-symbols.asm     20 | Equivalence | 11 |         |    0 | 00/0200               | PADD        EQU   $1741          ; 6530 A DATA DIRECTION
   44 |  2 include/kim-symbols.asm     21 | Equivalence | 11 |         |    0 | 00/0200               | SBD         EQU   $1742          ; 6530 B DATA
   45 |  2 include/kim-symbols.asm     22 | Equivalence | 11 |         |    0 | 00/0200               | PBDD        EQU   $1743          ; 6530 B DATA DIRECTION
   46 |  2 include/kim-symbols.asm     23 | Equivalence | 11 |         |    0 | 00/0200               | CLK1T       EQU   $1744          ; DIV BY 1 TIME
   47 |  2 include/kim-symbols.asm     24 | Equivalence | 11 |         |    0 | 00/0200               | CLK8T       EQU   $1745          ; DIV BY 8 TIME
   48 |  2 include/kim-symbols.asm     25 | Equivalence | 11 |         |    0 | 00/0200               | CLK64T      EQU   $1746          ; DIV BY 64 TIME
   49 |  2 include/kim-symbols.asm     26 | Equivalence | 11 |         |    0 | 00/0200               | CLKKT       EQU   $1747          ; DIV BY 1024 TIME
   50 |  2 include/kim-symbols.asm     27 | Equivalence | 11 |         |    0 | 00/0200               | CLKRDI      EQU   $1747          ; READ TIME OUT BIT
   51 |  2 include/kim-symbols.asm     28 | Equivalence | 11 |         |    0 | 00/0200               | CLKRDT      EQU   $1746          ; READ TIME
   52 |  2 include/kim-symbols.asm     29 | Empty       | 11 |         |    0 | 00/0200               |                                  
   53 |  2 include/kim-symbols.asm     30 | Comment     | 11 |         |    0 | 00/0200               | ;       MPU REG.  SAVX AREA IN PAGE 0
   54 |  2 include/kim-symbols.asm     31 | Empty       | 11 |         |    0 | 00/0200               |                                  
   55 |  2 include/kim-symbols.asm     32 | Equivalence | 11 |         |    0 | 00/0200               | PCL         EQU   $EF            ; PROGRAM CNT LOW
   56 |  2 include/kim-symbols.asm     33 | Equivalence | 11 |         |    0 | 00/0200               | PCH         EQU   $F0            ; PROGRAM CNT HI
   57 |  2 include/kim-symbols.asm     34 | Equivalence | 11 |         |    0 | 00/0200               | PREG        EQU   $F1            ; CURRENT STATUS REG
   58 |  2 include/kim-symbols.asm     35 | Equivalence | 11 |         |    0 | 00/0200               | SPUSER      EQU   $F2            ; CURRENT STACK POINTER
   59 |  2 include/kim-symbols.asm     36 | Equivalence | 11 |         |    0 | 00/0200               | ACC         EQU   $F3            ; ACCUMULATOR
   60 |  2 include/kim-symbols.asm     37 | Equivalence | 11 |         |    0 | 00/0200               | YREG        EQU   $F4            ; Y INDEX
   61 |  2 include/kim-symbols.asm     38 | Equivalence | 11 |         |    0 | 00/0200               | XREG        EQU   $F5            ; X INDEX
   62 |  2 include/kim-symbols.asm     39 | Empty       | 11 |         |    0 | 00/0200               |                                  
   63 |  2 include/kim-symbols.asm     40 | Comment     | 11 |         |    0 | 00/0200               | ;       KIM FIXED AREA IN PAGE 0
   64 |  2 include/kim-symbols.asm     41 | Empty       | 11 |         |    0 | 00/0200               |                                  
   65 |  2 include/kim-symbols.asm     42 | Equivalence | 11 |         |    0 | 00/0200               | CHKHI       EQU   $F6            
   66 |  2 include/kim-symbols.asm     43 | Equivalence | 11 |         |    0 | 00/0200               | CHKSUM      EQU   $F7            
   67 |  2 include/kim-symbols.asm     44 | Equivalence | 11 |         |    0 | 00/0200               | INL         EQU   $F8            ; INPUT BUFFER
   68 |  2 include/kim-symbols.asm     45 | Equivalence | 11 |         |    0 | 00/0200               | INH         EQU   $F9            ; INPUT BUFFER
   69 |  2 include/kim-symbols.asm     46 | Equivalence | 11 |         |    0 | 00/0200               | POINTL      EQU   $FA            ; LSB OF OPEN CELL
   70 |  2 include/kim-symbols.asm     47 | Equivalence | 11 |         |    0 | 00/0200               | POINTH      EQU   $FB            ; MSB OF OPEN CELL
   71 |  2 include/kim-symbols.asm     48 | Equivalence | 11 |         |    0 | 00/0200               | TEMP        EQU   $FC            
   72 |  2 include/kim-symbols.asm     49 | Equivalence | 11 |         |    0 | 00/0200               | TMPX        EQU   $FD            
   73 |  2 include/kim-symbols.asm     50 | Equivalence | 11 |         |    0 | 00/0200               | CHAR        EQU   $FE            
   74 |  2 include/kim-symbols.asm     51 | Equivalence | 11 |         |    0 | 00/0200               | MODE        EQU   $FF            
   75 |  2 include/kim-symbols.asm     52 | Empty       | 11 |         |    0 | 00/0200               |                                  
   76 |  2 include/kim-symbols.asm     53 | Comment     | 11 |         |    0 | 00/0200               | ;       KIM FIXED AREA IN PAGE 23
   77 |  2 include/kim-symbols.asm     54 | Empty       | 11 |         |    0 | 00/0200               |                                  
   78 |  2 include/kim-symbols.asm     55 | Equivalence | 11 |         |    0 | 00/0200               | CHKL        EQU   $17E7          
   79 |  2 include/kim-symbols.asm     56 | Equivalence | 11 |         |    0 | 00/0200               | CHKH        EQU   $17E8          ; CHKSUM
   80 |  2 include/kim-symbols.asm     57 | Equivalence | 11 |         |    0 | 00/0200               | SAVX        EQU   $17E9          
   81 |  2 include/kim-symbols.asm     58 | Equivalence | 11 |         |    0 | 00/0200               | VEB         EQU   $17EC          ; VOLATILE EXECUTION BLOCK
   82 |  2 include/kim-symbols.asm     59 | Equivalence | 11 |         |    0 | 00/0200               | CNTL30      EQU   $17F2          ; TTY DELAY
   83 |  2 include/kim-symbols.asm     60 | Equivalence | 11 |         |    0 | 00/0200               | CNTH30      EQU   $17F3          ; TTY DELAY
   84 |  2 include/kim-symbols.asm     61 | Equivalence | 11 |         |    0 | 00/0200               | TIMH        EQU   $7F4           
   85 |  2 include/kim-symbols.asm     62 | Equivalence | 11 |         |    0 | 00/0200               | SAL         EQU   $17F5          ; LOW STARTING ADDRESS
   86 |  2 include/kim-symbols.asm     63 | Equivalence | 11 |         |    0 | 00/0200               | SAH         EQU   $17F6          ; HI STARTING ADDRESS
   87 |  2 include/kim-symbols.asm     64 | Equivalence | 11 |         |    0 | 00/0200               | EAL         EQU   $17F7          ; LOW ENDING ADDRESS;
   88 |  2 include/kim-symbols.asm     65 | Equivalence | 11 |         |    0 | 00/0200               | EAH         EQU   $17F8          ; HI ENDING ADDRESS
   89 |  2 include/kim-symbols.asm     66 | Equivalence | 11 |         |    0 | 00/0200               | ID          EQU   $17F9          ; TAPE PROGRAM ID NUMBER
   90 |  2 include/kim-symbols.asm     67 | Empty       | 11 |         |    0 | 00/0200               |                                  
   91 |  2 include/kim-symbols.asm     68 | Comment     | 11 |         |    0 | 00/0200               | ;       INTERRUPT VECTORS
   92 |  2 include/kim-symbols.asm     69 | Empty       | 11 |         |    0 | 00/0200               |                                  
   93 |  2 include/kim-symbols.asm     70 | Equivalence | 11 |         |    0 | 00/0200               | NMIV        EQU   $17FA          ; STOP VECTOR (STOP=1C00)
   94 |  2 include/kim-symbols.asm     71 | Equivalence | 11 |         |    0 | 00/0200               | RSTV        EQU   $17FC          ; RST VECTOR
   95 |  2 include/kim-symbols.asm     72 | Equivalence | 11 |         |    0 | 00/0200               | IRQV        EQU   $17FE          ; IRQ VECTOR (BRK= 1C00)
   96 |  2 include/kim-symbols.asm     73 | Empty       | 11 |         |    0 | 00/0200               |                                  
   97 |  2 include/kim-symbols.asm     74 | Comment     | 11 |         |    0 | 00/0200               | ;       SEVEN SEGMENT DISPLAYS
   98 |  2 include/kim-symbols.asm     75 | Empty       | 11 |         |    0 | 00/0200               |                                  
   99 |  2 include/kim-symbols.asm     76 | Equivalence | 11 |         |    0 | 00/0200               | SEG-1       EQU   $09            
  100 |  2 include/kim-symbols.asm     77 | Equivalence | 11 |         |    0 | 00/0200               | SEG-2       EQU   $0B            
  101 |  2 include/kim-symbols.asm     78 | Equivalence | 11 |         |    0 | 00/0200               | SEG-3       EQU   $0D            
  102 |  2 include/kim-symbols.asm     79 | Equivalence | 11 |         |    0 | 00/0200               | SEG-4       EQU   $0F            
  103 |  2 include/kim-symbols.asm     80 | Equivalence | 11 |         |    0 | 00/0200               | SEG-5       EQU   $11            
  104 |  2 include/kim-symbols.asm     81 | Equivalence | 11 |         |    0 | 00/0200               | SEG-6       EQU   $13            
  105 |  2 include/kim-symbols.asm     82 | Empty       | 11 |         |    0 | 00/0200               |                                  
  106 |  2 include/kim-symbols.asm     83 | Comment     | 11 |         |    0 | 00/0200               | ;       SEGMENT LED LETTERS
  107 |  2 include/kim-symbols.asm     84 | Empty       | 11 |         |    0 | 00/0200               |                                  
  108 |  2 include/kim-symbols.asm     85 | Comment     | 11 |         |    0 | 00/0200               | ; Relationship between bit and segment
  109 |  2 include/kim-symbols.asm     86 | Comment     | 11 |         |    0 | 00/0200               | ;
  110 |  2 include/kim-symbols.asm     87 | Comment     | 11 |         |    0 | 00/0200               | ;  | -0- |
  111 |  2 include/kim-symbols.asm     88 | Comment     | 11 |         |    0 | 00/0200               | ;  5     1
  112 |  2 include/kim-symbols.asm     89 | Comment     | 11 |         |    0 | 00/0200               | ;  | -6- |
  113 |  2 include/kim-symbols.asm     90 | Comment     | 11 |         |    0 | 00/0200               | ;  4     2
  114 |  2 include/kim-symbols.asm     91 | Comment     | 11 |         |    0 | 00/0200               | ;  | -3- |
  115 |  2 include/kim-symbols.asm     92 | Empty       | 11 |         |    0 | 00/0200               |                                  
  116 |  2 include/kim-symbols.asm     93 | Comment     | 11 |         |    0 | 00/0200               | ; e.g. a lower case 'd' would include bits 1,2,3,4,6 = 1101 1110 = $5E
  117 |  2 include/kim-symbols.asm     94 | Empty       | 11 |         |    0 | 00/0200               |                                  
  118 |  2 include/kim-symbols.asm     95 | Comment     | 11 |         |    0 | 00/0200               | ; Upper Case Letters
  119 |  2 include/kim-symbols.asm     96 | Empty       | 11 |         |    0 | 00/0200               |                                  
  120 |  2 include/kim-symbols.asm     97 | Equivalence | 11 |         |    0 | 00/0200               | LA          EQU   $F7            
  121 |  2 include/kim-symbols.asm     98 | Equivalence | 11 |         |    0 | 00/0200               | LB          EQU   $FF            
  122 |  2 include/kim-symbols.asm     99 | Equivalence | 11 |         |    0 | 00/0200               | LC          EQU   $B9            
  123 |  2 include/kim-symbols.asm    100 | Equivalence | 11 |         |    0 | 00/0200               | LD          EQU   $BF            
  124 |  2 include/kim-symbols.asm    101 | Equivalence | 11 |         |    0 | 00/0200               | LE          EQU   $79            
  125 |  2 include/kim-symbols.asm    102 | Equivalence | 11 |         |    0 | 00/0200               | LF          EQU   $F1            
  126 |  2 include/kim-symbols.asm    103 | Equivalence | 11 |         |    0 | 00/0200               | LG          EQU   $BD            
  127 |  2 include/kim-symbols.asm    104 | Equivalence | 11 |         |    0 | 00/0200               | LH          EQU   $76            
  128 |  2 include/kim-symbols.asm    105 | Equivalence | 11 |         |    0 | 00/0200               | LI          EQU   $86            
  129 |  2 include/kim-symbols.asm    106 | Equivalence | 11 |         |    0 | 00/0200               | LJ          EQU   $9E            
  130 |  2 include/kim-symbols.asm    107 | Comment     | 11 |         |    0 | 00/0200               | ; LK
  131 |  2 include/kim-symbols.asm    108 | Equivalence | 11 |         |    0 | 00/0200               | LL          EQU   $38            
  132 |  2 include/kim-symbols.asm    109 | Comment     | 11 |         |    0 | 00/0200               | ; LL
  133 |  2 include/kim-symbols.asm    110 | Comment     | 11 |         |    0 | 00/0200               | ; LM
  134 |  2 include/kim-symbols.asm    111 | Equivalence | 11 |         |    0 | 00/0200               | LO          EQU   $3F            
  135 |  2 include/kim-symbols.asm    112 | Equivalence | 11 |         |    0 | 00/0200               | LP          EQU   $F3            
  136 |  2 include/kim-symbols.asm    113 | Comment     | 11 |         |    0 | 00/0200               | ; LQ
  137 |  2 include/kim-symbols.asm    114 | Comment     | 11 |         |    0 | 00/0200               | ; DEG-R
  138 |  2 include/kim-symbols.asm    115 | Equivalence | 11 |         |    0 | 00/0200               | LS          EQU   $ED            
  139 |  2 include/kim-symbols.asm    116 | Comment     | 11 |         |    0 | 00/0200               | ; LT
  140 |  2 include/kim-symbols.asm    117 | Equivalence | 11 |         |    0 | 00/0200               | LU          EQU   $BE            
  141 |  2 include/kim-symbols.asm    118 | Comment     | 11 |         |    0 | 00/0200               | ; LV
  142 |  2 include/kim-symbols.asm    119 | Comment     | 11 |         |    0 | 00/0200               | ; LW
  143 |  2 include/kim-symbols.asm    120 | Comment     | 11 |         |    0 | 00/0200               | ; LX
  144 |  2 include/kim-symbols.asm    121 | Equivalence | 11 |         |    0 | 00/0200               | LY          EQU   $EE            
  145 |  2 include/kim-symbols.asm    122 | Comment     | 11 |         |    0 | 00/0200               | ; LZ
  146 |  2 include/kim-symbols.asm    123 | Empty       | 11 |         |    0 | 00/0200               |                                  
  147 |  2 include/kim-symbols.asm    124 | Comment     | 11 |         |    0 | 00/0200               | ; Lower Case Letters
  148 |  2 include/kim-symbols.asm    125 | Empty       | 11 |         |    0 | 00/0200               |                                  
  149 |  2 include/kim-symbols.asm    126 | Equivalence | 11 |         |    0 | 00/0200               | La          EQU   $DE            
  150 |  2 include/kim-symbols.asm    127 | Equivalence | 11 |         |    0 | 00/0200               | Lb          EQU   $FC            
  151 |  2 include/kim-symbols.asm    128 | Equivalence | 11 |         |    0 | 00/0200               | Lc          EQU   $D8            
  152 |  2 include/kim-symbols.asm    129 | Equivalence | 11 |         |    0 | 00/0200               | Ld          EQU   $DE            
  153 |  2 include/kim-symbols.asm    130 | Comment     | 11 |         |    0 | 00/0200               | ; Le
  154 |  2 include/kim-symbols.asm    131 | Equivalence | 11 |         |    0 | 00/0200               | Lf          EQU   $F1            
  155 |  2 include/kim-symbols.asm    132 | Equivalence | 11 |         |    0 | 00/0200               | Lg          EQU   $EF            
  156 |  2 include/kim-symbols.asm    133 | Equivalence | 11 |         |    0 | 00/0200               | Lh          EQU   $F4            
  157 |  2 include/kim-symbols.asm    134 | Equivalence | 11 |         |    0 | 00/0200               | Li          EQU   $84            
  158 |  2 include/kim-symbols.asm    135 | Comment     | 11 |         |    0 | 00/0200               | ; Lj
  159 |  2 include/kim-symbols.asm    136 | Comment     | 11 |         |    0 | 00/0200               | ; Lk
  160 |  2 include/kim-symbols.asm    137 | Equivalence | 11 |         |    0 | 00/0200               | Ll          EQU   $86            
  161 |  2 include/kim-symbols.asm    138 | Comment     | 11 |         |    0 | 00/0200               | ; Lm
  162 |  2 include/kim-symbols.asm    139 | Equivalence | 11 |         |    0 | 00/0200               | Ln          EQU   $D4            
  163 |  2 include/kim-symbols.asm    140 | Equivalence | 11 |         |    0 | 00/0200               | Lo          EQU   $DC            
  164 |  2 include/kim-symbols.asm    141 | Equivalence | 11 |         |    0 | 00/0200               | Lp          EQU   $F3            
  165 |  2 include/kim-symbols.asm    142 | Comment     | 11 |         |    0 | 00/0200               | ; Lq
  166 |  2 include/kim-symbols.asm    143 | Equivalence | 11 |         |    0 | 00/0200               | Lr          EQU   $DO            
  167 |  2 include/kim-symbols.asm    144 | Comment     | 11 |         |    0 | 00/0200               | ; Ls
  168 |  2 include/kim-symbols.asm    145 | Equivalence | 11 |         |    0 | 00/0200               | Lt          EQU   $F8            
  169 |  2 include/kim-symbols.asm    146 | Equivalence | 11 |         |    0 | 00/0200               | Lu          EQU   $9C            
  170 |  2 include/kim-symbols.asm    147 | Comment     | 11 |         |    0 | 00/0200               | ; Lv
  171 |  2 include/kim-symbols.asm    148 | Comment     | 11 |         |    0 | 00/0200               | ; Lw
  172 |  2 include/kim-symbols.asm    149 | Comment     | 11 |         |    0 | 00/0200               | ; Lx
  173 |  2 include/kim-symbols.asm    150 | Equivalence | 11 |         |    0 | 00/0200               | Ly          EQU   $EE            
  174 |  2 include/kim-symbols.asm    151 | Comment     | 11 |         |    0 | 00/0200               | ; Lz
  175 |  2 include/kim-symbols.asm    152 | Empty       | 11 |         |    0 | 00/0200               |                                  
  176 |  2 include/kim-symbols.asm    153 | Equivalence | 11 |         |    0 | 00/0200               | L1          EQU   $86            
  177 |  2 include/kim-symbols.asm    154 | Equivalence | 11 |         |    0 | 00/0200               | L2          EQU   $DB            
  178 |  2 include/kim-symbols.asm    155 | Equivalence | 11 |         |    0 | 00/0200               | L3          EQU   $CF            
  179 |  2 include/kim-symbols.asm    156 | Equivalence | 11 |         |    0 | 00/0200               | L4          EQU   $E6            
  180 |  2 include/kim-symbols.asm    157 | Equivalence | 11 |         |    0 | 00/0200               | L5          EQU   $ED            
  181 |  2 include/kim-symbols.asm    158 | Equivalence | 11 |         |    0 | 00/0200               | L6          EQU   $FD            
  182 |  2 include/kim-symbols.asm    159 | Equivalence | 11 |         |    0 | 00/0200               | L7          EQU   $87            
  183 |  2 include/kim-symbols.asm    160 | Equivalence | 11 |         |    0 | 00/0200               | L8          EQU   $FF            
  184 |  2 include/kim-symbols.asm    161 | Equivalence | 11 |         |    0 | 00/0200               | L9          EQU   $EF            
  185 |  2 include/kim-symbols.asm    162 | Equivalence | 11 |         |    0 | 00/0200               | L0          EQU   $BF            
  186 |  2 include/kim-symbols.asm    163 | Empty       | 11 |         |    0 | 00/0200               |                                  
  187 |  2 include/kim-symbols.asm    164 | Equivalence | 11 |         |    0 | 00/0200               | LSPC        EQU   $00            
  188 |  2 include/kim-symbols.asm    165 | Equivalence | 11 |         |    0 | 00/0200               | LDASH       EQU   $40            
  189 |  2 include/kim-symbols.asm    166 | Empty       | 11 |         |    0 | 00/0200               |                                  
  190 |  2 include/kim-symbols.asm    167 | Empty       | 11 |         |    0 | 00/0200               |                                  
  191 |  2 include/kim-symbols.asm    168 | Empty       | 11 |         |    0 | 00/0200               |                                  
  192 |  1              scroll.asm     24 | Directive   | 11 |         |    0 | 00/0200               |             PUT   include/defs.asm
  193 |  3        include/defs.asm      1 | Comment     | 11 |         |    0 | 00/0200               | ;-----------------------------------------------------------------------------
  194 |  3        include/defs.asm      2 | Comment     | 11 |         |    0 | 00/0200               | ; EQUATES
  195 |  3        include/defs.asm      3 | Comment     | 11 |         |    0 | 00/0200               | ;-----------------------------------------------------------------------------
  196 |  3        include/defs.asm      4 | Empty       | 11 |         |    0 | 00/0200               |                                  
  197 |  3        include/defs.asm      5 | Empty       | 11 |         |    0 | 00/0200               |                                  
  198 |  3        include/defs.asm      6 | Equivalence | 11 |         |    0 | 00/0200               | DATAINDEX   EQU   $02            ; start index
  199 |  3        include/defs.asm      7 | Empty       | 11 |         |    0 | 00/0200               |                                  
  200 |  3        include/defs.asm      8 | Empty       | 11 |         |    0 | 00/0200               |                                  
  201 |  1              scroll.asm     25 | Directive   | 11 |         |    0 | 00/0200               |             PUT   include/macros.asm
  202 |  4      include/macros.asm      1 | Empty       | 11 |         |    0 | 00/0200               |                                  
  203 |  1              scroll.asm     26 | Empty       | 11 |         |    0 | 00/0200               |                                  
  204 |  1              scroll.asm     27 | Directive   | 11 |         |    0 | 00/0200               |             MX    %11            ; 11 tells Merlin32 that A, X and Y are
  205 |  1              scroll.asm     28 | Comment     | 11 |         |    0 | 00/0200               |                                 ;   8 bit registers
  206 |  1              scroll.asm     29 | Empty       | 11 |         |    0 | 00/0200               |                                  
  207 |  1              scroll.asm     30 | Code        | 11 |         |    1 | 00/0200 : 58          |             cli                  
  208 |  1              scroll.asm     31 | Code        | 11 |         |    1 | 00/0201 : D8          |             cld                  
  209 |  1              scroll.asm     32 | Empty       | 11 |         |    0 | 00/0202               |                                  
  210 |  1              scroll.asm     33 | Comment     | 11 |         |    0 | 00/0202               | ;-----------------------------------------------------------------------------
  211 |  1              scroll.asm     34 | Comment     | 11 |         |    0 | 00/0202               | ; Initialise
  212 |  1              scroll.asm     35 | Comment     | 11 |         |    0 | 00/0202               | ;-----------------------------------------------------------------------------
  213 |  1              scroll.asm     36 | Code        | 11 |         |    2 | 00/0202 : A9 7F       |             lda   #$7f           ; set directional registers
  214 |  1              scroll.asm     37 | Code        | 11 |         |    3 | 00/0204 : 8D 41 17    |             sta   {$1741}        
  215 |  1              scroll.asm     38 | Code        | 11 |         |    2 | 00/0207 : A9 3F       |             lda   #$3f           
  216 |  1              scroll.asm     39 | Code        | 11 |         |    3 | 00/0209 : 8D 43 17    |             sta   {$1743}        
  217 |  1              scroll.asm     40 | Empty       | 11 |         |    0 | 00/020C               |                                  
  218 |  1              scroll.asm     41 | Comment     | 11 |         |    0 | 00/020C               |             ;LDA <#DATA          ; set up a vector to point to the data
  219 |  1              scroll.asm     42 | Comment     | 11 |         |    0 | 00/020C               |             ;STA DATAINDEX
  220 |  1              scroll.asm     43 | Comment     | 11 |         |    0 | 00/020C               |             ;LDA >#DATA
  221 |  1              scroll.asm     44 | Comment     | 11 |         |    0 | 00/020C               |             ;STA DATAINDEX + 1
  222 |  1              scroll.asm     45 | Empty       | 11 |         |    0 | 00/020C               |                                  
  223 |  1              scroll.asm     46 | Code        | 11 |         |    2 | 00/020C : A9 00       |             lda   #$00           ; store initial value for Y in zero page
  224 |  1              scroll.asm     47 | Code        | 11 |         |    2 | 00/020E : 85 00       |             sta   $00            
  225 |  1              scroll.asm     48 | Empty       | 11 |         |    0 | 00/0210               |                                  
  226 |  1              scroll.asm     49 | Code        | 11 |         |    2 | 00/0210 : A9 FF       |             LDA   #$FF           
  227 |  1              scroll.asm     50 | Code        | 11 |         |    3 | 00/0212 : 8D 07 17    |             STA   $1707          ; set timer division
  228 |  1              scroll.asm     51 | Empty       | 11 |         |    0 | 00/0215               |                                  
  229 |  1              scroll.asm     52 | Empty       | 11 |         |    0 | 00/0215               | DISPLOOP                         
  230 |  1              scroll.asm     53 | Code        | 11 |         |    2 | 00/0215 : A4 00       |             ldy   $00            ; initialise character offset from Zero Page
  231 |  1              scroll.asm     54 | Code        | 11 |         |    2 | 00/0217 : A2 09       |             ldx   #$09           ; init 7 segment offset
  232 |  1              scroll.asm     55 | Empty       | 11 |         |    0 | 00/0219               |                                  
  233 |  1              scroll.asm     56 | Empty       | 11 |         |    0 | 00/0219               | CHARLOOP                         
  234 |  1              scroll.asm     57 | Code        | 11 |         |    2 | 00/0219 : A9 00       |             lda   #$00           
  235 |  1              scroll.asm     58 | Code        | 11 |         |    3 | 00/021B : 8D 40 17    |             sta   {$1740}        ; do it this way
  236 |  1              scroll.asm     59 | Code        | 11 |         |    3 | 00/021E : 8E 42 17    |             stx   {$1742}        ;   to remove flicker
  237 |  1              scroll.asm     60 | Comment     | 11 |         |    0 | 00/0221               |             ;lda (DATAINDEX),y
  238 |  1              scroll.asm     61 | Code        | 11 |  2      |    3 | 00/0221 : B9 52 02    |             lda   DATA,y         
  239 |  1              scroll.asm     62 | Code        | 11 |         |    3 | 00/0224 : 8D 40 17    |             sta   {$1740}        
  240 |  1              scroll.asm     63 | Empty       | 11 |         |    0 | 00/0227               |                                  
  241 |  1              scroll.asm     64 | Empty       | 11 |         |    0 | 00/0227               |                                  
  242 |  1              scroll.asm     65 | Comment     | 11 |         |    0 | 00/0227               | ;-----------------------------------------------------------------------------
  243 |  1              scroll.asm     66 | Comment     | 11 |         |    0 | 00/0227               | ; delay to allow the leds to reach full brightness
  244 |  1              scroll.asm     67 | Comment     | 11 |         |    0 | 00/0227               | ;-----------------------------------------------------------------------------
  245 |  1              scroll.asm     68 | Code        | 11 |         |    1 | 00/0227 : 98          |             tya                  ; delay added to allow the led to fully light
  246 |  1              scroll.asm     69 | Code        | 11 |         |    2 | 00/0228 : A0 04       |             ldy   #$04           ;   helps a little with the genuine KIM-1
  247 |  1              scroll.asm     70 | Empty       | 11 |         |    0 | 00/022A               | CHARDELAY                        
  248 |  1              scroll.asm     71 | Code        | 11 |         |    1 | 00/022A : 88          |             dey                  
  249 |  1              scroll.asm     72 | Code        | 11 |         |    2 | 00/022B : D0 FD       |             bne   CHARDELAY      ; glow up character
  250 |  1              scroll.asm     73 | Code        | 11 |         |    1 | 00/022D : A8          |             tay                  
  251 |  1              scroll.asm     74 | Comment     | 11 |         |    0 | 00/022E               | ;-----------------------------------------------------------------------------
  252 |  1              scroll.asm     75 | Empty       | 11 |         |    0 | 00/022E               |                                  
  253 |  1              scroll.asm     76 | Code        | 11 |         |    1 | 00/022E : C8          |             iny                  
  254 |  1              scroll.asm     77 | Code        | 11 |         |    1 | 00/022F : E8          |             inx                  
  255 |  1              scroll.asm     78 | Code        | 11 |         |    1 | 00/0230 : E8          |             inx                  
  256 |  1              scroll.asm     79 | Code        | 11 |         |    2 | 00/0231 : E0 15       |             cpx   #$15           ; beyond last segment
  257 |  1              scroll.asm     80 | Code        | 11 |         |    2 | 00/0233 : D0 E4       |             bne   CHARLOOP       
  258 |  1              scroll.asm     81 | Empty       | 11 |         |    0 | 00/0235               |                                  
  259 |  1              scroll.asm     82 | Comment     | 11 |         |    0 | 00/0235               | ;-----------------------------------------------------------------------------
  260 |  1              scroll.asm     83 | Comment     | 11 |         |    0 | 00/0235               | ; all segments done, check timer, and start again to refresh display
  261 |  1              scroll.asm     84 | Comment     | 11 |         |    0 | 00/0235               | ;-----------------------------------------------------------------------------
  262 |  1              scroll.asm     85 | Code        | 11 |         |    3 | 00/0235 : AD 07 17    |             LDA   $1707          ; check the timer
  263 |  1              scroll.asm     86 | Code        | 11 |         |    2 | 00/0238 : F0 05       |             BEQ   DONE           
  264 |  1              scroll.asm     87 | Code        | 11 |         |    3 | 00/023A : AD 06 17    |             LDA   $1706          ; restore divider etc (a read will accomplish this)
  265 |  1              scroll.asm     88 | Code        | 11 |         |    2 | 00/023D : E6 00       |             INC   $00            ; increment index low byte
  266 |  1              scroll.asm     89 | Comment     | 11 |         |    0 | 00/023F               |             ; TODO check for terminator
  267 |  1              scroll.asm     90 | Empty       | 11 |         |    0 | 00/023F               |                                  
  268 |  1              scroll.asm     91 | Code        | 11 |  2      |    3 | 00/023F : 4C 15 02    | DONE        jmp   DISPLOOP       ; refresh the display
  269 |  1              scroll.asm     92 | Empty       | 11 |         |    0 | 00/0242               |                                  
  270 |  1              scroll.asm     93 | Comment     | 11 |         |    0 | 00/0242               | ;-----------------------------------------------------------------------------
  271 |  1              scroll.asm     94 | Comment     | 11 |         |    0 | 00/0242               | ; DECINDEX subroutine: decrement 16 bit variable INDEXL/INDEXH
  272 |  1              scroll.asm     95 | Comment     | 11 |         |    0 | 00/0242               | ;-----------------------------------------------------------------------------
  273 |  1              scroll.asm     96 | Code        | 11 |         |    2 | 00/0242 : A5 02       | DECINDEX    LDA   {$02}          ;Get index low byte
  274 |  1              scroll.asm     97 | Code        | 11 |         |    2 | 00/0244 : D0 02       |             BNE   SKP_IDXH       ;Test for INDEXL = zero
  275 |  1              scroll.asm     98 | Code        | 11 |         |    2 | 00/0246 : C6 03       |             DEC   {$02}+1        ;Decrement index high byte
  276 |  1              scroll.asm     99 | Code        | 11 |         |    2 | 00/0248 : C6 02       | SKP_IDXH    DEC   {$02}          ;Decrement index low byte
  277 |  1              scroll.asm    100 | Code        | 11 |         |    1 | 00/024A : 60          |             RTS                  ;Return to caller
  278 |  1              scroll.asm    101 | Empty       | 11 |         |    0 | 00/024B               |                                  
  279 |  1              scroll.asm    102 | Comment     | 11 |         |    0 | 00/024B               | ;-----------------------------------------------------------------------------
  280 |  1              scroll.asm    103 | Comment     | 11 |         |    0 | 00/024B               | ; INCINDEX subroutine: increment 16 bit variable INDEXL/INDEXH
  281 |  1              scroll.asm    104 | Comment     | 11 |         |    0 | 00/024B               | ;-----------------------------------------------------------------------------
  282 |  1              scroll.asm    105 | Code        | 11 |         |    2 | 00/024B : E6 02       | INCINDEX    INC   {$02}          ;Increment index low byte
  283 |  1              scroll.asm    106 | Code        | 11 |         |    2 | 00/024D : D0 02       |             BNE   SKP_IDX        ;If not zero, skip high byte
  284 |  1              scroll.asm    107 | Code        | 11 |         |    2 | 00/024F : E6 03       |             INC   {$02}+1        ;Increment index high byte
  285 |  1              scroll.asm    108 | Code        | 11 |         |    1 | 00/0251 : 60          | SKP_IDX     RTS                  ;Return to caller
  286 |  1              scroll.asm    109 | Empty       | 11 |         |    0 | 00/0252               |                                  
  287 |  1              scroll.asm    110 | Empty       | 11 |         |    0 | 00/0252               |                                  
  288 |  1              scroll.asm    111 | Empty       | 11 |         |    0 | 00/0252               |                                  
  289 |  1              scroll.asm    112 | Data        | 11 |         |   15 | 00/0252 : 76 79 38 38 | DATA        DB    {$76},{$79},{$38},{$38},{$3F},{$00},{$BD},{$38},{$F7},{$ED},{$ED},{$00},{$F8},{$F8},{$EE}
      |                                   |             |    |         |      |           3F 00 BD 38 |
      |                                   |             |    |         |      |           F7 ED ED 00 |
      |                                   |             |    |         |      |           F8 F8 EE    |
  290 |  1              scroll.asm    113 | Data        | 11 |         |    1 | 00/0261 : EA          |             DB    $EA            
  291 |  1              scroll.asm    114 | Empty       | 11 |         |    0 | 00/0262               |                                  
  292 |  1              scroll.asm    115 | Empty       | 11 |         |    0 | 00/0262               |                                  
------+-----------------------------------+-------------+----+---------+------+-----------------------+-------------------------------------------------------------------
